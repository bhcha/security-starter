plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dx'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Spring Boot 의존성 관리만 사용
dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

// JAR 설정
jar {
    enabled = true
}

// Maven 배포 설정
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            groupId = 'com.dx'
            artifactId = 'security-starter'
            version = '1.0.0'
        }
    }
    
    repositories {
        maven {
            // 로컬 Maven 저장소 
            url = layout.buildDirectory.dir("repos")
        }
    }
}

dependencies {
    // implementation → api로 변경 (전이 의존성 노출)
    api 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-security'
    
    // Spring Boot Auto-configuration
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Optional dependencies for conditional beans
    compileOnly 'org.keycloak:keycloak-admin-client:26.0.0'
    compileOnly 'org.springframework.boot:spring-boot-starter-actuator'
    
    // 비동기 및 재시도
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'
    
    // 캐시
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // H2 데이터베이스 (테스트용)
    runtimeOnly 'com.h2database:h2'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 임시로 이동된 테스트 파일들 제외
sourceSets {
    test {
        java {
            exclude '**/integration_temp/**'
        }
    }
}
