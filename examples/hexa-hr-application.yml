# hexa-hr 프로젝트용 application.yml 설정 예시

server:
  port: 8080

spring:
  application:
    name: hexa-hr
    
  # 데이터베이스 설정 (H2 - 개발환경)
  datasource:
    url: jdbc:h2:mem:hexahr
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  # 데이터베이스 설정 (MySQL - 운영환경)
  # datasource:
  #   url: jdbc:mysql://localhost:3306/hexahr
  #   driver-class-name: com.mysql.cj.jdbc.Driver
  #   username: hexahr_user
  #   password: your_password
    
  jpa:
    hibernate:
      ddl-auto: update  # 운영환경에서는 validate 사용
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        
  # H2 콘솔 (개발환경에서만 사용)
  h2:
    console:
      enabled: true
      path: /h2-console

# Hexacore Security 설정
hexacore:
  security:
    enabled: true
    
    # 토큰 공급자 설정
    token-provider:
      provider: jwt  # jwt 또는 keycloak
      jwt:
        enabled: true
        secret-key: "hexa-hr-jwt-secret-key-2024-change-in-production"
        issuer: "hexa-hr"
        audience: 
          - "hexa-hr"
          - "hexa-hr-web"
        access-token-expire-seconds: 3600    # 1시간
        refresh-token-expire-seconds: 604800 # 7일
        
    # 영속성 설정
    persistence:
      jpa:
        enabled: true
        
    # 캐시 설정
    cache:
      type: caffeine
      caffeine:
        enabled: true
        max-size: 1000
        expire-after-write: 300  # 5분

# 로깅 설정
logging:
  level:
    root: INFO
    com.dx.hexacore.security: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: DEBUG  # 개발환경에서만 사용
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator 설정 (모니터링)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized